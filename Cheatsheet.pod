
=head1 NOMBRE

Mojolicious::Guides::Cheatsheet - Reference

=head1 RESUMEN

Este documento contiene un referencia concisa y para todo uso.

=head1 VALORES DE STASH RESERVADOS

Además de todo lo que contenga el prefijo,  C<mojo.>, hay algunos valores del stash que 
son reservado para las rutas y el renderizador.

=head2 C<action>

  $r->route('/welcome')->to(action => 'hello');

Despachar a acción.

=head2 C<app>

  $r->route('/welcome')->to(app => MyApp->new);

 Despachar a aplicaciones embebidas.

=head2 C<cb>

  $r->route('/welcome')->to(cb => sub {...});

Despachar a Callback.

=head2 C<class>

  $r->route('/welcome')->to(class => 'Greeting');

Alternativa camelizado de C<controller>.

=head2 C<controller>

  $r->route('/welcome')->to(controller => 'greetings');

Despachar a controlador.

=head2 C<data>

  $self->render(data => 'raw bytes');

Convertir bytes crudos en una respuesta.

=head2 C<extends>

  $self->render(extends => 'template');

Plantilla para extender.

=head2 C<format>

  $self->render(format => 'rss');

Renderizar el formato.

=head2 C<handler>

  $self->render(handler => 'ep');

"Handler" usado para renderizar.

=head2 C<inline>

  $self->render(inline => '<%= 1 + 1%>');

Renderizar la plantilla insertada.

=head2 C<json>

  $self->render(json => {foo => 23});

Convertir una estructura de Perl en una respuesta JSON.

=head2 C<layout>

  $self->render(layout => 'green');

Renderizar layout.

=head2 C<method>

  $r->route('/welcome')->to(method => 'hello');

Alternativa de C<action>.

=head2 C<namespace>

  $r->route('/welcome')->to(namespace => 'TestApp', method => 'lulz');

Despachar a "Namespace" (espacio de nombres).

=head2 C<partial>

  my $result = $self->render(partial => 1);

Devolver resultado del procesado en lugar de convertirlo en una respuesta.

=head2 C<path>

  $r->route('/welcome')->to(path => '/test', app => MyApp->new);

Base de la ruta usado para despachar a aplicaciones embebidas.

=head2 C<status>

  $self->render(status => 404);

Codigo de respuesta procesada.

=head2 C<template>

  $self->render(template => 'bye');

Renderizar plantilla.

=head2 C<text>

  $self->render(text => 'Hello World!');

Convertir caracteres en una respuesta.

=head1 VARIABLES DE AMBIENTE

Muchas partes de L<Mojolicious> pueden ser mejoradas con variables de ambiente.
Las variables de depuración de ambiente son excluidas porque son para uso
exclusivo de desarollador. 


=head2 C<MOJO_APP>

Decide cual aplicación L<Mojolicious> o L<Mojo> se utilizará, siempre debe
contener un nombre de clase como C<MyApp>. En general, es 
por defecto L<Mojo::HelloWorld>.

  MOJO_APP=MyApp

=head2 C<MOJO_CA_FILE>

La ruta al archivo de seguridad de "TLS CA", siempre debe contener una ruta como C</etc/tls/cacerts.pem>.
L<IO::Socket::SSL> debe estar instalado para tener soporte de TLS.

  MOJO_CA_FILE=/etc/tls/cacerts.pem

=head2 C<MOJO_CERT_FILE>

La ruta al certificado TLS. Siempre debe contener una ruta como
C</etc/tls/client.crt>.
 L<IO::Socket::SSL> debe estar instalado para tener soporte de TLS.

  MOJO_CERT_FILE=/etc/tls/client.crt

=head2 C<MOJO_CHUNK_SIZE>

Tamaño de pedazo usado para operaciones I/O, en bytes. Un pedazo de tamaño más 
grande acelera operaciones I/O, pero utilizará más memoria. Es 
por defecto C<131072>.

  MOJO_CHUNK_SIZE=1024

=head2 C<MOJO_CONFIG>

Archivo de configuración usado por L<Mojolicious::Plugin::Config> y
L<Mojolicious::Plugin::JSONConfig>, bastante conveniente para pruebas.

   MOJO_CONFIG=myapp.conf

=head2 C<MOJO_HOME>

Directorio principal de la aplicación L<Mojolicious>, siempre debe contener 
una ruta como C</home/sri/myapp>.

  MOJO_HOME=/home/sri/myapp

=head2 C<MOJO_IOWATCHER>

Implementación alternativa de L<Mojo::IOWatcher> para probar.

  MOJO_IOWATCHER=Mojo::IOWatcher::EV

=head2 C<MOJO_KEY_FILE>

La ruta a la llave de TLS, siempre debe contener una ruta como
C</etc/tls/client.key>.
L<IO::Socket::SSL> debe estar instalado para tener soporte de TLS.

  MOJO_KEY_FILE=/etc/tls/client.key

=head2 C<MOJO_LOG_LEVEL>

Nivel de logueo para la aplicación L<Mojolicious>, siempre debe contener un Nivel de logueo
válido como C<debug> o C<error>.

  MOJO_LOG_LEVEL=debug
  MOJO_LOG_LEVEL=error

=head2 C<MOJO_MAX_LEFTOVER_SIZE>

Máximo tamaño, en bytes, del buffer para pedidos de HTTP por pipeline, es 
por defecto C<262144>.

  MOJO_MAX_LEFTOVER_SIZE=2048

=head2 C<MOJO_MAX_LINE_SIZE>

Máximo tamaño de linea para encabezados y lineas de inicio de un mensaje HTTP
en bytes, es por defecto C<10240>.

  MOJO_MAX_LINE_SIZE=2048

=head2 C<MOJO_MAX_MEMORY_SIZE>

Máximo tamaño, en bytes, de contenido HTTP para mantener en la memoria. Contenido más grande se escribirá
en archivos temporales, es por defecto C<262144>.

  MOJO_MAX_MEMORY_SIZE=2048

=head2 C<MOJO_MAX_MESSAGE_SIZE>

Máximo tamaño para mensajes de HTTP, en bytes, es por defecto C<5242880>.

  MOJO_MAX_MESSAGE_SIZE=1024

=head2 C<MOJO_MAX_REDIRECTS>

  MOJO_MAX_REDIRECTS=3

Máximo numero de redirecciones que L<Mojo::UserAgent> seguirá, es por defecto C<0>.

=head2 C<MOJO_MAX_WEBSOCKET_SIZE>

Máximo tamaño para mensajes de WebSocket, en bytes, es por defecto C<262144>.

  MOJO_MAX_WEBSOCKET_SIZE=1024

=head2 C<MOJO_MODE>

Modo de ejecución para la aplicación L<Mojolicious>, siempre debe contener un modo válido como
C<development> o C<production>.

  MOJO_MODE=development
  MOJO_MODE=production

=head2 C<MOJO_NO_BONJOUR>

Desactivar el soporte Bonjour.
L<Net::Rendezvous::Publish> debe estar instalado para tener soporte de Bonjour.

  MOJO_NO_BONJOUR=1

=head2 C<MOJO_NO_DETECT>

Desactivar detección del ambiente de deployment de L<Mojolicious>.

  MOJO_NO_DETECT=1

=head2 C<MOJO_NO_IPV6>

Desactivar soporte de IPv6.
L<IO::Socket::IP> debe estar instalado para tener soporte de IPv6.

  MOJO_NO_IPV6=1

=head2 C<MOJO_NO_TLS>

Desactivar soporte del TLS, esto podría resultar en un rendimiento que es un poco mejor y
menor uso de memoria.
L<IO::Socket::SSL> debe estar instalado para tener soporte de TLS.

  MOJO_NO_TLS=1

=head2 C<MOJO_PROXY>

Activar la detección automática de proxies HTTP y HTTPS en L<Mojo::UserAgent>, para
razones de seguridad está desactivado por defecto.

  MOJO_PROXY=1

=head2 C<MOJO_REVERSE_PROXY>

Habilitar el soporte de proxy inverso para su aplicación L<Mojolicious>.
Esto permite L<Mojolicious> recoger por defecto el C<X-Forwarded-For>,
C<X-Forwarded-Host> y C<X-Forwarded-HTTPS> en encabezados.

  MOJO_REVERSE_PROXY=1

=head2 C<MOJO_STATIC_CLASS>

La clase que el despachador de archivos estaticos siempre debe usar para encontrar templates en
C<DATA>, es por defecto C<main>.

  MOJO_STATIC_CLASS=MyApp

=head2 C<MOJO_TEMPLATE_CLASS>

La clase que el renderizador de L<Mojolicious> siempre debe usar para encontrar templates
en C<DATA>, es por defecto C<main>.

  MOJO_TEMPLATE_CLASS=MyApp

=head2 C<MOJO_TMPDIR>

Directorio para archivos temporales, tales como archivos grandes, por defecto usando 
un directorio temporal especifico a la plataforma.

  MOJO_TMPDIR=/tmp/mojo

=head1 MÁS INFORMACIÓN

Usted puede continuar con L<Mojolicious::Guides> ahora o echar un vistazo a la wiki de Mojolicious
L<http://github.com/kraih/mojo/wiki>, que contiene una gran cantidad
de documentación y ejemplos de diferentes autores.

=cut
